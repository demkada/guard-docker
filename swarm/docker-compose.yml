version: '3'
services:
  ##########################################################
  #           Cassandra Cluster deployment                 #
  #        (1 DC, 3 racks with 2 nodes/racks)              #
  #                                                        #
  ##########################################################
  dc1_rack1_cassandra_node1:
    image: cassandra:3.11.4
    command: bash -c 'if [ -z "$$(ls -A /var/lib/cassandra/)" ] ; then sleep 0; fi && /docker-entrypoint.sh cassandra -f'
    deploy:
      placement:
        constraints:
          - node.labels.name == rack1
    networks:
      - backend_network
    volumes:
      - dc1_rack1_cassandra_node1_data:/var/lib/cassandra
    environment:
      - CASSANDRA_CLUSTER_NAME=guard_cluster
      - CASSANDRA_LISTEN_ADDRESS=auto
      - CASSANDRA_BROADCAST_ADDRESS=dc1_rack1_cassandra_node1
      - CASSANDRA_DC=DC1
      - CASSANDRA_RACK=RACK1
      - CASSANDRA_ENDPOINT_SNITCH=GossipingPropertyFileSnitch
      - CASSANDRA_SEEDS=dc1_rack1_cassandra_node1, dc1_rack2_cassandra_node1, dc1_rack3_cassandra_node1
    expose:
      - 7000
      - 7001
      - 7199
      - 9042
      - 9160
    ulimits:
      memlock: -1
      nproc: 32768
      nofile: 100000
      
  dc1_rack2_cassandra_node1:
    image: cassandra:3.11.4
    command: bash -c 'if [ -z "$$(ls -A /var/lib/cassandra/)" ] ; then sleep 0; fi && /docker-entrypoint.sh cassandra -f'
    deploy:
      placement:
        constraints:
          - node.labels.name == rack2
    networks:
      - backend_network
    volumes:
      - dc1_rack2_cassandra_node1_data:/var/lib/cassandra
    environment:
      - CASSANDRA_CLUSTER_NAME=guard_cluster
      - CASSANDRA_LISTEN_ADDRESS=auto
      - CASSANDRA_BROADCAST_ADDRESS=dc1_rack2_cassandra_node1
      - CASSANDRA_DC=DC1
      - CASSANDRA_RACK=RACK2
      - CASSANDRA_ENDPOINT_SNITCH=GossipingPropertyFileSnitch
      - CASSANDRA_SEEDS=dc1_rack1_cassandra_node1, dc1_rack2_cassandra_node1, dc1_rack3_cassandra_node1
    expose:
      - 7000
      - 7001
      - 7199
      - 9042
      - 9160
    ulimits:
      memlock: -1
      nproc: 32768
      nofile: 100000
      
  dc1_rack3_cassandra_node1:
    image: cassandra:3.11.4
    command: bash -c 'if [ -z "$$(ls -A /var/lib/cassandra/)" ] ; then sleep 0; fi && /docker-entrypoint.sh cassandra -f'
    deploy:
      placement:
        constraints:
          - node.labels.name == rack3
    networks:
      - backend_network
    volumes:
      - dc1_rack3_cassandra_node1_data:/var/lib/cassandra
    environment:
      - CASSANDRA_CLUSTER_NAME=guard_cluster
      - CASSANDRA_LISTEN_ADDRESS=auto
      - CASSANDRA_BROADCAST_ADDRESS=dc1_rack3_cassandra_node1
      - CASSANDRA_DC=DC1
      - CASSANDRA_RACK=RACK3
      - CASSANDRA_ENDPOINT_SNITCH=GossipingPropertyFileSnitch
      - CASSANDRA_SEEDS=dc1_rack1_cassandra_node1, dc1_rack2_cassandra_node1, dc1_rack3_cassandra_node1
    expose:
      - 7000
      - 7001
      - 7199
      - 9042
      - 9160
    ulimits:
      memlock: -1
      nproc: 32768
      nofile: 100000

  ##########################################################
  #                Portainer deployment                    #
  #               Docker Management Tool                   #
  #                                                        #
  ##########################################################
  # A web based interface for managing your docker containers.
  portainer:
    image: portainer/portainer
    networks:
      - backend_network
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer-data:/data
    ports:
      - "9000:9000"
networks:
  backend_network:
    driver_opts:
      encrypted: "true"

volumes:
  dc1_rack1_cassandra_node1_data:
  dc1_rack2_cassandra_node1_data:
  dc1_rack3_cassandra_node1_data:
  portainer-data:
  # Add volumes for new nodes
